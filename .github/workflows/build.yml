name: C/C++ CI

on:
  push:
    branches:
      - master
      - develop
      - release/*
      - feature/*

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_esp32s3:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/cache@master
      id: espressif
      with:
        path: |
          ~/.espressif
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - uses: actions/checkout@v2
      with:
        repository: Meisterschulen-am-Ostbahnhof-Munchen/cci_ecu_driver_private
        token: ${{ secrets.PAT_TOKEN }} # `PAT_TOKEN` is a secret that contains your PAT PAT_TOKEN
        path: EasyExample/components/lib_cci
    - uses: actions/checkout@v2
      with:
        repository: Meisterschulen-am-Ostbahnhof-Munchen/tcp_server
        token: ${{ secrets.PAT_TOKEN }} # `PAT_TOKEN` is a secret that contains your PAT PAT_TOKEN
        path: EasyExample/components/tcp_server
    - uses: actions/checkout@v2
      with:
        repository: Meisterschulen-am-Ostbahnhof-Munchen/can2ip
        token: ${{ secrets.PAT_TOKEN }} # `PAT_TOKEN` is a secret that contains your PAT PAT_TOKEN
        path: EasyExample/components/can2ip
    - uses: actions/checkout@v2
        
    - name: esp32s3_build_test
      run: |
        export PROJECT_PATH=$PWD
        cd $PROJECT_PATH/.github/workflows
        git clone --recursive https://github.com/espressif/esp-idf
        ./esp-idf/install.sh
        . ./esp-idf/export.sh
        echo $PATH
        cd $PROJECT_PATH/EasyExample

        idf.py --preview set-target esp32s3
        idf.py build
    - uses: actions/upload-artifact@v2
      with:
        name: esp32s3_build
        path: EasyExample/build

